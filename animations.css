/************************************************************************
* ANIMATIONS.CSS
*
* Author: Austin Hannaleck
* Last Updated: 9/1/2017
*
* DESCRIPTION
* This file must be used in conjunction with ScrollView.js in order
* to work. Every animated element requires the utilization of two 
* classes: .animatedBlock, and .notViewed. To assign different 
* animations to an element, several "data-" attributes are used. The
* data attributes this utitlizes are described below.

* data-position: Describes the position direction the element will
*                move into view from (left, right, up, bottom).
*
* data-scale: Describes the scaling behavior of the element (grow/shrink).
*
* data-offset: Describes the offset in the viewport before the animation
*              begins (e.g., if offset is equal to 20, this means the 
*              animation will trigger when the viewport is either 20px
*              above or below full view of the element).
*
*
*
*************************************************************************/

.animatedBlock
{
    opacity: 0;
    position: relative;
    -webkit-transition: all .6s ease-in;
    -moz-transition: all .6s ease-in;
    -ms-transition: all .6s ease-in;
    -o-transition: all .6s ease-in;
    transition: all .6s ease-in;
}

/* Slide animations */

.animatedBlock[data-position="left"]
{
    left: -50px;  
}

.animatedBlock[data-position="bottom"]
{
    bottom: -50px;
}

.animatedBlock[data-position="right"]
{
    right: -50px;
}

.animatedBlock[data-position="bottom"].viewed 
{
  bottom: 0px;
  opacity: 1;
  filter: alpha(opacity=100);
}

.animatedBlock[data-position="right"].viewed
{
    right: 0px;
    opacity: 1;
    filter: alpha(opacity=100);
}

.animatedBlock[data-position="left"].viewed
{
    left: 0px;
    opacity: 1;
    filter: alpha(opacity=100);
}

/* Grow an element */

.animatedBlock[data-scale="grow"]
{
    transform: scale(0.1); /* Scale cannot be 0 because it will never be in viewport */
}

.animatedBlock[data-scale="grow"].viewed
{
    transform: scale(1);
    opacity: 1;
}